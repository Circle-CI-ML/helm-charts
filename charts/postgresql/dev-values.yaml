# Default values for postgresql.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: postgres
  pullPolicy: IfNotPresent
  tag: "9.6"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# database root password for user postgres
rootPassword: postgres
# root user
rootUser: postgres
# databases to create
multidb: archival;hive_metastore
# multidbUser
multidbUser: snappyflow
# password for multi db
multidbUserPassord: snappyflow

backup:
  enabled: false

restore:
  enabled: false

initconfig:
  create-multi-db.sh: |-
    #!/bin/sh
    set -e
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" -c "CREATE USER $PG_MULTI_DB_USER WITH ENCRYPTED PASSWORD '$PG_MULTI_DB_PASSWORD';"
    export IFS=";"
    for db in $PG_MULTI_DB; do
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" -c "CREATE DATABASE $db;"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" -c "GRANT ALL PRIVILEGES ON DATABASE $db TO $PG_MULTI_DB_USER;"
    done

service:
  type: ClusterIP
  port: 5432

persistence:
  enabled: false

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
global:
  sfappname: sf-portal-app
  sfprojectname: snappyflow-app
  sfappname_key: snappyflow/appname
  sfprojectname_key: snappyflow/projectname
  key: ""
