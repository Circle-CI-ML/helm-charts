apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sfapm.fullname" . }}-esmanager-celery-default
  labels:
    {{- include "sfapm.labels" . | nindent 4 }}
    app: elasticsearch_manager
    role: celery
    queue: default
    snappyflow/component: snappyflow-apm
    {{ default "snappyflow/appname" .Values.global.sfappname_key }}: {{ default .Release.Name .Values.global.sfappname }}
    {{ default "snappyflow/projectname" .Values.global.sfprojectname_key }}: {{ default .Release.Name .Values.global.sfprojectname }}
spec:
  replicas: {{ .Values.esmanager_celery.default.replicaCount }}
  minReadySeconds: 10
  selector:
    matchLabels:
      {{- include "sfapm.selectorLabels" . | nindent 6 }}
      app: elasticsearch_manager
      role: celery
      queue: default
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "sfapm.selectorLabels" . | nindent 8 }}
        app: elasticsearch_manager
        role: celery
        queue: default
        snappyflow/component: snappyflow-apm
        {{ default "snappyflow/appname" .Values.global.sfappname_key }}: {{ default .Release.Name .Values.global.sfappname }}
        {{ default "snappyflow/projectname" .Values.global.sfprojectname_key }}: {{ default .Release.Name .Values.global.sfprojectname }}
    spec:
      {{- if .Values.global.sfScheduler.enabled }}
      schedulerName: {{ .Values.global.sfScheduler.schedulerName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sfapm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: db-ready
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          command:
            - sh 
            - -c 
            - "until pg_isready -d postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}; do sleep 3; done"
          {{- if .Values.postgresql.enabled }}
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: multidbUserPassord
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "sfapm.fullname" . }}-apm
        - name: redis-ready
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command:
            - sh 
            - -c 
            - "until redis-cli -h ${REDIS_HOST} -p ${REDIS_PORT} ping ; do sleep 3; done"
          envFrom:
            - configMapRef:
                name: {{ include "sfapm.fullname" . }}-apm
      containers:
        - name: celery
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.esmanager.image.repository }}:{{ .Values.esmanager.image.tag }}"
          imagePullPolicy: {{ .Values.esmanager.image.pullPolicy }}
          command: ["bash", "-c"]
          args: [{{ .Values.esmanager_celery.default.command }}]
          env:
          {{- range $key, $value := .Values.esmanager_celery.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
          {{- end }}
          {{- if .Values.global.enable_sftrace }}
            - name: SFTRACE_PROFILE_KEY
              value: "{{ .Values.global.key }}"
            - name: SFTRACE_PROJECT_NAME
              value: "{{ .Values.global.sfprojectname }}"
            - name: SFTRACE_APP_NAME
              value: "{{ .Values.global.sfappname }}"
            - name: ENABLE_SFTRACE
              value: "{{ .Values.global.enable_sftrace }}"
            - name: ELASTIC_APM_SERVICE_NAME
              value: "sf-elasticsearch-manager-celery-default"
          {{- end }}
          {{- if .Values.postgresql.enabled }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: multidbUserPassord
          {{- end }}
          {{- if .Values.enableDebug }}
            - name: DEBUG
              value: "True"
          {{- end }}
          {{- if .Values.enableDebug }}
            - name: LOG_LEVEL
              value: debug
          {{- else }}
            - name: LOG_LEVEL
              value: info
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "sfapm.fullname" . }}-esmanager
          resources:
            {{- toYaml .Values.sfapm_celery.default.resources | nindent 12 }}
          livenessProbe:
            initialDelaySeconds: 300
            periodSeconds: 180
            timeoutSeconds: 10
            exec:
              command: ["python", "check.py"]
          volumeMounts:
            - name: warm-movement-rules
              mountPath: /etc/conf
            {{- if .Values.global.enable_sftrace }}
            - mountPath: /sfagent
              name: sftrace-agent
            - mountPath: /var/log/snappyflow/elasticsearch_manager
              name: log
            {{- end }}
        {{- if .Values.sidecarLogger.enabled }}
        - name: audit-logger
          image:  "{{ .Values.sidecarLogger.image.repository }}:{{ .Values.sidecarLogger.image.tag }}"
          imagePullPolicy: {{ .Values.sidecarLogger.image.pullPolicy | quote }}
          args: [/bin/sh, -c, 'tail -n+1 -F /var/log/snappyflow/elasticsearch_manager/audit.log']
          resources:
            {{- toYaml .Values.sidecarLogger.resources | nindent 12 }}
          volumeMounts:
          - name: log
            mountPath: /var/log/snappyflow/elasticsearch_manager
        - name: es-cleanup-logger
          image:  "{{ .Values.sidecarLogger.image.repository }}:{{ .Values.sidecarLogger.image.tag }}"
          imagePullPolicy: {{ .Values.sidecarLogger.image.pullPolicy | quote }}
          args: [/bin/sh, -c, 'tail -n+1 -F /var/log/snappyflow/elasticsearch_manager/es_cleanup.log']
          resources:
            {{- toYaml .Values.sidecarLogger.resources | nindent 12 }}
          volumeMounts:
          - name: log
            mountPath: /var/log/snappyflow/elasticsearch_manager
        - name: application-logger
          image:  "{{ .Values.sidecarLogger.image.repository }}:{{ .Values.sidecarLogger.image.tag }}"
          imagePullPolicy: {{ .Values.sidecarLogger.image.pullPolicy | quote }}
          args: [/bin/sh, -c, 'tail -n+1 -F -q /var/log/snappyflow/elasticsearch_manager/elasticsearch_manager.log /var/log/snappyflow/elasticsearch_manager/django.log /var/log/snappyflow/elasticsearch_manager/cloud.log']
          resources:
            {{- toYaml .Values.sidecarLogger.resources | nindent 12 }}
          volumeMounts:
          - name: log
            mountPath: /var/log/snappyflow/elasticsearch_manager
        - name: cache-logger
          image:  "{{ .Values.sidecarLogger.image.repository }}:{{ .Values.sidecarLogger.image.tag }}"
          imagePullPolicy: {{ .Values.sidecarLogger.image.pullPolicy | quote }}
          args: [/bin/sh, -c, 'tail -n+1 -F /var/log/snappyflow/elasticsearch_manager/cache.log']
          resources:
            {{- toYaml .Values.sidecarLogger.resources | nindent 12 }}
          volumeMounts:
          - name: log
            mountPath: /var/log/snappyflow/elasticsearch_manager
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: log
          emptyDir: {}
        {{- if .Values.global.enable_sftrace }}
        - name: sftrace-agent
          emptyDir: {}
        {{- end }}
        - name: warm-movement-rules
          configMap:
            name: {{ template "sfapm.fullname" . }}-esmanager-warm-movement
